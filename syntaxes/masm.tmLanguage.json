{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "MASM",
    "patterns": [
        {
            "include": "#segments"
        },
        {
            "include": "#registers"
        },
        {
            "include": "#instructions"
        },
        {
            "include": "#directives"
        },
        {
            "include": "#types"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#labels"
        },
        {
            "include": "#macros"
        }
    ],
    "repository": {
        "segments": {
            "patterns": [
                {
                    "name": "keyword",
                    "match": "(?i)(\\.CODE|\\.DATA|\\.STACK)"
                }
            ]
        },
        "registers": {
            "patterns": [
                {
                    "name": "variable.register.masm",
                    "match": "(?i)\\b(AL|AX|EAX|BL|BX|EBX|CL|CX|ECX|DL|DX|EDX|SI|ESI|DI|EDI|BP|EBP|SP|ESP)\\b"
                }
            ]
        },
        "instructions": {
            "patterns": [
                {
                    "name": "keyword.instruction.masm",
                    "match": "(?i)\\b(MOV|XCHG|MOVZX|MOVSX|DIV|IDIV|MUL|IMUL|ADD|ADC|INC|SUB|SBB|DEC|NEG|JE|JNE|JA|JAE|JB|JBE|JL|JLE|JG|JGE|JC|JNC|JZ|JNZ|JMP|CALL|RET|SHL|SHR|ROL|RCL|ROR|RCR|AND|OR|XOR|REP|REPE|REPNE|MOVSB|MOVSW|MOVSD|LODSB|LODSW|LODSD|STOSB|STOSW|STOSD|SCASB|SCASW|SCASD|CMPSB|CMPSW|CMPSD|INCHAR|ININT|EXIT|OUTI|OUTU|OUTSTR|OUTCHAR|NEWLINE)\\b"
                }
            ]
        },
        "directives": {
            "patterns": [
                {
                    "name": "keyword.directive.masm",
                    "match": "(?i)\\b(INCLUDE|EQU|=|DB|DW|DD|DQ|END|PROC|ENDP|STRUC|ENDS|RECORD|SEGMENT|ASSUME|ORG|PTR|WORD|DWORD|BYTE|QWORD)\\b"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.masm",
                    "match": "(?i)\\b(BYTE|WORD|DWORD|QWORD)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword",
                    "match": "(?i)([+\\-*/]|\\b(MOD|SHL|SHR|PTR|TYPE|SIZE|SIZEOF|LENGTH|LENGTHOF|WIDTH|MASK|OFFSET|DUP)\\b)"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.masm",
                    "match": "\\b[0-9a-fA-F]+[hH]\\b|\\b[01]+[bByY]\\b|\\b[0-7]+[oOqQ]\\b|\\b[0-9]+[dDtT]?\\b"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.semicolon.masm",
                    "begin": ";",
                    "end": "$"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.single.masm",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.masm",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.double.masm",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.masm",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "labels": {
            "patterns": [
                {
                    "name": "entity.name.function.masm",
                    "match": "^[a-zA-Z_][a-zA-Z0-9_]*:"
                }
            ]
        },
        "macros": {
            "patterns": [
                {
                    "name": "keyword.macro.masm",
                    "match": "(?i)\\b(MACRO|ENDM)\\b"
                }
            ]
        }
    },
    "scopeName": "source.masm"
}
