{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "MASM",
    "patterns": [
        {
            "include": "#segments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#registers"
        },
        {
            "include": "#instructions"
        },
        {
            "include": "#directives"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#labels"
        },
        {
            "include": "#macros"
        }
    ],
    "repository": {
        "segments": {
            "patterns": [
                {
                    "name": "keyword.segment.masm",
                    "match": "(?i)\\b(\\.CODE|\\.DATA|\\.STACK)\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.masm",
                    "match": "(?i)\\b(if|else|while|for|return|end)\\b"
                }
            ]
        },
        "registers": {
            "patterns": [
                {
                    "name": "variable.register.masm",
                    "match": "(?i)\\b(eax|ebx|ecx|edx|esi|edi|esp|ebp|ax|bx|cx|dx|si|di|sp|bp|al|bl|cl|dl|ah|bh|ch|dh)\\b"
                }
            ]
        },
        "instructions": {
            "patterns": [
                {
                    "name": "keyword.instruction.masm",
                    "match": "(?i)\\b(mov|add|sub|mul|div|jmp|cmp|push|pop|call|ret|inc|dec|and|or|xor|shl|shr|offset)\\b"
                }
            ]
        },
        "directives": {
            "patterns": [
                {
                    "name": "keyword.directive.masm",
                    "match": "(?i)\\b(SEGMENT|ENDS|ASSUME|ORG|ENDP|PROC|PTR|WORD|DWORD|BYTE|DB|DW|DD|DQ)\\b"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.masm",
                    "match": "\\b0x[0-9A-Fa-f]+\\b|\\b[0-9]+\\b"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.semicolon.masm",
                    "begin": ";",
                    "end": "$"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.masm",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.masm",
                    "match": "\\\\."
                }
            ]
        },
        "labels": {
            "patterns": [
                {
                    "name": "entity.name.function.masm",
                    "match": "^[a-zA-Z_][a-zA-Z0-9_]*:"
                }
            ]
        },
        "macros": {
            "patterns": [
                {
                    "name": "keyword.macro.masm",
                    "match": "(?i)\\b(MACRO|ENDM)\\b"
                }
            ]
        }
    },
    "scopeName": "source.masm"
}
